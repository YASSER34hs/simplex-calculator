/*
 * MyUI.java
 * UI class generated by netBeans IDE. Urgly, and even contains some Chinese 
 * characters. If you want to investigate the running logic of the program, you
 * only need to check method main, jButton1MouseClicked and jButton2MouseClicked.
 * 
 * Usage:
 * In GUI : 
 *     java -jar MySimplex.jar
 * Cmd line :
 *     java -jar MySimplex.jar <file-contains-a-problem-in-txt>
 */

package mysimplex;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author  yli
 */
public class MyUI extends javax.swing.JFrame {
    
    /** Creates new form MyUI */
    public MyUI() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" 生成的代码 ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Yet Another Simplex Resolver");
        setResizable(false);
        jLabel1.setText("Input your problem here:");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("4 5\n3.0 2.0 1.0 0.0 0.0 == 1.0\n5.0 1.0 1.0 1.0 0.0 == 3.0\n2.0 5.0 1.0 0.0 1.0 == 4.0\n4.0 4.0 1.0 1.0 1.0 == 6.0\nminimize 1.0 1.0 1.0 1.0 1.0\n");
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setText("Run");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton2.setText("View Detail");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jLabel2.setText("Result:");

        jCheckBox1.setText("Fraction?");
        jCheckBox1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBox1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addComponent(jLabel2))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jCheckBox1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
// TODO 将在此处添加您的处理代码：
        needFract = evt.getStateChange() == evt.SELECTED ? true : false;
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
// TODO 将在此处添加您的处理代码：
        try {
            File f = new File(".");
            Runtime.getRuntime().exec(String.format("\"C:\\Program Files\\Internet Explorer\\iexplore.exe\" %sresult.htm", f.toURI().toURL()));
        } catch(Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Ooops in open html...");
        }
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
// TODO 将在此处添加您的处理代码：
        detail = new Detail();
        String text = jTextArea1.getText();
        detail.problem = text;
        String[] inputs = text.split("\\n");
        Problem p = null;
        try {
            p = Problem.parseProblem(inputs);
            detail.initTableau = p.simplex.toDetail();
        } catch(Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Your problem is not coded right! Please check it!");
        }
        
        try {
            p.simplex.run();
        } catch(Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Ooops!");
        }
        
        String s = "";
        
        if(p.simplex.infeasible) {
            s += "INFEASIBLE";
            detail.results.add("INFEASIBLE");
        } else if(p.simplex.unbounded) {
            s += "UNBOUNDED\n";
            detail.results.add("UNBOUNDED");
            s += p.simplex.BFSToString(needFract);
            detail.results.add(p.simplex.BFSToString(needFract));
        } else {
            s += p.finalOptimalToString(needFract) + "\n";
            detail.results.add(p.finalOptimalToString(needFract));
            s += p.simplex.BFSToString(needFract);
            detail.results.add(p.simplex.BFSToString(needFract));
        }
        
        jTextArea2.setText(s);
        
        try {
            File f = new File(new File("."), "result.htm");
            PrintStream fileOut = new PrintStream(new FileOutputStream(f));
            detail.printDetails(fileOut);
            fileOut.close();
        } catch(Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Ooops! when printing details.");
        }
    }//GEN-LAST:event_jButton1MouseClicked
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        if(args.length == 0) {
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    try {
                        UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
                        new MyUI().setVisible(true);
                    } catch(Exception e) {
                        e.printStackTrace();
                    }
                }
            });
        } else {
            String filePath = args[0];
            File fi = new File(filePath);
            ArrayList<String> in = new ArrayList<String>();
            try {
                BufferedReader reader = new BufferedReader(new FileReader(fi));
                String l = reader.readLine();
                while(l != null) {
                    in.add(l);
                    l = reader.readLine();
                }
            } catch (Exception e) {
                System.err.println("Fail to read your file! Please check it!");
                e.printStackTrace();
            }
            String[] inputs = in.toArray(new String[]{});
            detail = new Detail();
            detail.problem = "";
            for(int i=0; i<inputs.length; ++i)
                detail.problem += inputs[i] + "\n";
            Problem p = null;
            try {
                p = Problem.parseProblem(inputs);
                detail.initTableau = p.simplex.toDetail();
            } catch(Exception e) {
                System.err.println("Your problem is not coded right! Please check it!");
                e.printStackTrace();
            }
        
            try {
                p.simplex.run();
            } catch(Exception e) {
                System.err.println("Ooops!");
                e.printStackTrace();
            }
        
            String s = "";
        
            if(p.simplex.infeasible) {
                s += "INFEASIBLE";
                detail.results.add("INFEASIBLE");
            } else if(p.simplex.unbounded) {
                s += "UNBOUNDED\n";
                detail.results.add("UNBOUNDED");
                s += p.simplex.BFSToString(needFract);
                detail.results.add(p.simplex.BFSToString(needFract));
            } else {
                s += p.finalOptimalToString(needFract) + "\n";
                detail.results.add(p.finalOptimalToString(needFract));
                s += p.simplex.BFSToString(needFract);
                detail.results.add(p.simplex.BFSToString(needFract));
            }
        
            try {
                File f = new File(new File("."), "result.htm");
                PrintStream fileOut = new PrintStream(new FileOutputStream(f));
                detail.printDetails(fileOut);
                fileOut.close();
            } catch(Exception e) {
                System.err.println("Ooops! when printing details.");
                e.printStackTrace();
            }

            System.out.println(s);
        }
    }
    
    public static Detail detail;
    public static boolean needFract = false;
    
    // 变量声明 - 不进行修改//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // 变量声明结束//GEN-END:variables
    
}
